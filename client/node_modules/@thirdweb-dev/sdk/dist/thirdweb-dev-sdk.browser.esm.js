export { A as APPROVED_IMPLEMENTATIONS, C as ContractDeployer, L as LOCAL_NODE_PKEY, S as SUPPORTED_CHAIN_IDS, T as ThirdwebSDK, U as UserWallet, c as checkClientIdOrSecretKey, d as checkVerificationStatus, f as computeCloneFactoryAddress, s as convertParamValues, k as deployCreate2Factory, l as directDeployDeterministic, n as directDeployDeterministicPublished, m as directDeployDeterministicWithUri, e as extractFunctionParamsFromAbi, a as getAllDetectedExtensionNames, g as getAllDetectedFeatureNames, w as getApprovedImplementation, x as getDefaultTrustedForwarders, t as getDeployArguments, j as getEncodedConstructorParamsForThirdwebContract, h as getThirdwebContractAddress, u as getTrustedForwarders, i as isVerifiedOnEtherscan, o as predictAddressDeterministic, r as predictAddressDeterministicPublished, q as predictAddressDeterministicWithUri, p as predictThirdwebContractAddress, b as verify, v as verifyThirdwebPrebuiltImplementation } from './sdk-8f192b27.browser.esm.js';
export { G as ALL_ROLES, bi as AbiObjectSchema, bj as AbiSchema, bh as AbiTypeSchema, b9 as AddressOrEnsSchema, b8 as AddressSchema, v as AdminRoleMissingError, A as AssetNotFoundError, t as AuctionAlreadyStartedError, w as AuctionHasNotEndedError, bc as BYOCContractMetadataSchema, b5 as BigNumberSchema, b7 as BigNumberTransformSchema, b6 as BigNumberishSchema, as as COMMON_FACTORY, C as CONTRACTS_MAP, aO as CONTRACT_ADDRESSES, aq as CREATE2_FACTORY_BYTECODE, ba as CallOverrideSchema, aS as ChainId, bl as ChainIdToAddressSchema, bC as CommonContractOutputSchema, bB as CommonContractSchema, bF as CommonPlatformFeeSchema, bE as CommonPrimarySaleSchema, bD as CommonRoyaltySchema, bH as CommonSymbolSchema, bG as CommonTrustedForwarderSchema, bz as CompilerMetadataFetchedSchema, by as ContractInfoSchema, bf as CustomContractDeploy, bd as CustomContractInput, be as CustomContractOutput, bg as CustomContractSchema, bm as CustomFactoryInput, av as DEPLOYER_ABI, au as DEPLOYER_BYTECODE, bo as DeployTypeInput, bq as DeploymentNetworkInput, bU as DropErc1155ContractDeploy, bS as DropErc1155ContractInput, bT as DropErc1155ContractOutput, bV as DropErc1155ContractSchema, bQ as DropErc721ContractDeploy, bO as DropErc721ContractInput, bP as DropErc721ContractOutput, bR as DropErc721ContractSchema, D as DuplicateFileNameError, s as DuplicateLeafsError, E as EditionDropInitializer, a as EditionInitializer, aZ as EventType, x as ExtensionNotImplementedError, br as ExtraPublishMetadataSchemaInput, bs as ExtraPublishMetadataSchemaOutput, bn as FactoryDeploymentSchema, r as FetchError, F as FileNameMissingError, bt as FullPublishMetadataSchemaInput, bu as FullPublishMetadataSchemaOutput, u as FunctionDeprecatedError, at as GAS_LIMIT_FOR_DEPLOYER, I as InvalidAddressError, aY as LINK_TOKEN_ADDRESS, L as ListingNotFoundError, bY as MarketplaceContractDeploy, bW as MarketplaceContractInput, bX as MarketplaceContractOutput, bZ as MarketplaceContractSchema, M as MarketplaceInitializer, b as MarketplaceV3Initializer, bI as MerkleSchema, q as MissingOwnerRoleError, o as MissingRoleError, c as MultiwrapInitializer, aW as NATIVE_TOKENS, aV as NATIVE_TOKEN_ADDRESS, N as NFTCollectionInitializer, d as NFTDropInitializer, p as NotEnoughTokensError, n as NotFoundError, aN as OZ_DEFENDER_FORWARDER_ADDRESS, i as PREBUILT_CONTRACTS_APPURI_MAP, h as PREBUILT_CONTRACTS_MAP, c0 as PackContractDeploy, b_ as PackContractInput, b$ as PackContractOutput, c1 as PackContractSchema, P as PackInitializer, bk as PreDeployMetadata, bA as PreDeployMetadataFetchedSchema, bv as ProfileSchemaInput, bw as ProfileSchemaOutput, co as ProposalOutputSchema, bx as PublishedContractSchema, Q as QuantityAboveLimitError, R as RestrictedTransferError, bp as RouterTypeInput, bb as SDKOptionsSchema, ar as SIGNATURE, b4 as SUPPORTED_FEATURES, e as SignatureDropInitializer, bJ as SnapshotEntryInput, bL as SnapshotEntryWithProofSchema, bN as SnapshotInfoSchema, bK as SnapshotInputSchema, bM as SnapshotSchema, f as SplitInitializer, c4 as SplitsContractDeploy, c2 as SplitsContractInput, c3 as SplitsContractOutput, c5 as SplitsContractSchema, S as StaticJsonRpcBatchProvider, aI as THIRDWEB_DEPLOYER, T as TokenDropInitializer, cg as TokenErc1155ContractDeploy, ce as TokenErc1155ContractInput, cf as TokenErc1155ContractOutput, ch as TokenErc1155ContractSchema, c8 as TokenErc20ContractDeploy, c6 as TokenErc20ContractInput, c7 as TokenErc20ContractOutput, c9 as TokenErc20ContractSchema, cc as TokenErc721ContractDeploy, ca as TokenErc721ContractInput, cb as TokenErc721ContractOutput, cd as TokenErc721ContractSchema, g as TokenInitializer, y as TransactionError, U as UploadError, cm as VoteContractDeploy, ck as VoteContractInput, cl as VoteContractOutput, cn as VoteContractSchema, V as VoteInitializer, ci as VoteSettingsInputSchema, cj as VoteSettingsOuputSchema, W as WrongListingTypeError, aB as computeDeploymentAddress, aF as computeDeploymentInfo, aC as computeEOAForwarderAddress, aD as computeForwarderAddress, ag as constructAbiFromBytecode, ac as detectFeatures, ad as detectFeaturesFromBytecode, aG as encodeConstructorParamsForImplementation, a1 as extractCommentFromMetadata, a2 as extractConstructorParamsFromAbi, a3 as extractFunctionsFromAbi, a8 as extractIPFSHashFromBytecode, a4 as extractMinimalProxyImplementationAddress, K as fetchAbiFromAddress, aK as fetchAndCacheDeployMetadata, _ as fetchContractMetadata, J as fetchContractMetadataFromAddress, ab as fetchExtendedReleaseMetadata, aa as fetchPreDeployMetadata, aJ as fetchPublishedContractFromPolygon, a9 as fetchRawPredeployMetadata, ap as fetchSourceFilesFromMetadata, ah as getAllDetectedExtensions, af as getAllDetectedExtensionsFromBytecode, ae as getAllDetectedFeatures, a$ as getChainIdFromNetwork, b0 as getChainIdOrName, a_ as getChainProvider, al as getCompositeABI, aP as getContractAddressByChainId, k as getContractName, aQ as getContractPublisherAddress, j as getContractTypeForRemoteName, ay as getCreate2FactoryAddress, aH as getCreate2FactoryDeploymentInfo, O as getDefaultGasOverrides, X as getDynamicFeeData, Y as getGasPrice, aA as getInitBytecodeWithSalt, aE as getKeylessTxn, aR as getMultichainRegistryAddress, aX as getNativeTokenByChainId, Z as getPolygonGasPriorityFee, b2 as getProviderFromRpcUrl, H as getRoleHash, az as getSaltHash, b3 as getSignerAndProvider, aU as getSupportedChains, $ as hasMatchingAbi, B as includesErrorMessage, b1 as isChainConfig, aw as isContractDeployed, ao as isDowngradeVersion, ax as isEIP155Enforced, aj as isExtensionEnabled, ai as isFeatureEnabled, an as isIncrementalVersion, l as isProvider, m as isSigner, ak as joinABIs, a0 as matchesAbiFromBytecode, z as parseRevertReason, aM as resolveAddress, a6 as resolveContractUriAndBytecode, a5 as resolveContractUriFromAddress, aL as resolveEns, a7 as resolveImplementation, aT as setSupportedChains, am as toSemver } from './index-1f21bb77.browser.esm.js';
export { C as ContractEncoder, f as fetchCurrencyMetadata, a as fetchCurrencyValue, i as isNativeToken } from './fetchCurrencyValue-5c32dbf0.browser.esm.js';
export { c as cleanCurrencyAddress } from './cleanCurrencyAddress-e14426c0.browser.esm.js';
export { n as normalizePriceValue } from './normalizePriceValue-983b07c4.browser.esm.js';
export { s as setErc20Allowance } from './setErc20Allowance-23313af3.browser.esm.js';
export { B as BaseSignaturePayloadInput, g as ClaimConditionInputArray, e as ClaimConditionInputSchema, d as ClaimConditionMetadataSchema, h as ClaimConditionOutputSchema, C as ClaimEligibility, i as CurrencySchema, j as CurrencyValueSchema, G as GenericRequest, t as MintRequest1155, M as MintRequest20, s as MintRequest721, u as MintRequest721withQuantity, P as PartialClaimConditionInputSchema, n as Signature1155PayloadInput, o as Signature1155PayloadInputWithTokenId, p as Signature1155PayloadOutput, S as Signature20PayloadInput, k as Signature20PayloadOutput, l as Signature721PayloadInput, m as Signature721PayloadOutput, q as Signature721WithQuantityInput, r as Signature721WithQuantityOutput, a as approveErc20Allowance, c as convertToReadableQuantity, b as createSnapshot, f as fetchSnapshotEntryForAddress } from './signature-94e81470.browser.esm.js';
export { h as hasERC20Allowance } from './hasERC20Allowance-d98f8df2.browser.esm.js';
export { f as Erc20, E as Erc20BatchMintable, a as Erc20Burnable, b as Erc20ClaimableWithConditions, c as Erc20Droppable, d as Erc20Mintable, e as Erc20SignatureMintable, n as normalizeAmount } from './erc-20-914dbc10.browser.esm.js';
export { h as EditionMetadataInputOrUriSchema, f as EditionMetadataInputSchema, E as EditionMetadataOutputSchema, e as EditionMetadataWithOwnerOutputSchema, O as OptionalPropertiesInput, P as ProposalState, T as TokenMintInputSchema, c as computeNativeTokenAddress, d as deployContractDeterministicRaw, g as getCachedAbiForContract, m as matchesPrebuiltAbi, b as toDisplayValue, t as toEther, a as toUnits } from './token-bde6b0dd.browser.esm.js';
export { h as Erc721, E as Erc721BatchMintable, j as Erc721Burnable, b as Erc721Claimable, a as Erc721ClaimableWithConditions, f as Erc721Enumerable, c as Erc721LazyMintable, d as Erc721Mintable, e as Erc721Supply, g as Erc721TieredDrop, i as Erc721WithQuantitySignatureMintable, t as toWei } from './erc-721-59afd909.browser.esm.js';
export { P as PAPER_API_URL, a as PaperCheckout, c as createCheckoutLinkIntent, f as fetchRegisteredCheckoutId, p as parseChainIdToPaperChain } from './thirdweb-checkout-580a5c77.browser.esm.js';
export { c as getBlock, d as getBlockNumber, e as getBlockWithTransactions, b as getChainId, g as getContract, a as getContractFromAbi, w as watchBlock, f as watchBlockNumber, h as watchBlockWithTransactions, i as watchTransactions } from './watchTransactions-b2ed2434.browser.esm.js';
export { b as ContractAppURI, a as ContractEvents, C as ContractMetadata, G as GasCostEstimator, d as detectContractFeature, h as hasFunction } from './contract-appuri-ac486979.browser.esm.js';
export { C as ContractRoles } from './contract-roles-81b8eeb2.browser.esm.js';
export { a as ContractOwner, C as ContractRoyalty, D as DelayedReveal } from './contract-owner-15318194.browser.esm.js';
export { C as ContractPrimarySale } from './contract-sales-098ba3da.browser.esm.js';
export { D as DropClaimConditions } from './drop-claim-conditions-be07d9a3.browser.esm.js';
export { D as DropErc1155ClaimConditions, e as Erc1155, E as Erc1155BatchMintable, a as Erc1155Burnable, b as Erc1155Enumerable, c as Erc1155LazyMintable, d as Erc1155Mintable, f as Erc1155SignatureMintable } from './erc-1155-8fdfc0eb.browser.esm.js';
export { D as DropErc1155History } from './drop-erc1155-history-bc8aed31.browser.esm.js';
export { T as TokenERC20History } from './erc-20-history-5a32b209.browser.esm.js';
export { S as StandardErc20 } from './erc-20-standard-5f9e4b55.browser.esm.js';
export { S as StandardErc721 } from './erc-721-standard-c652979b.browser.esm.js';
export { S as StandardErc1155 } from './erc-1155-standard-5fe989ba.browser.esm.js';
export { L as ListingType, a as MarketplaceAuction, M as MarketplaceDirect } from './marketplace-auction-3ec5b3a2.browser.esm.js';
export { M as MarketplaceV3DirectListings, a as MarketplaceV3EnglishAuctions, b as MarketplaceV3Offers, S as Status } from './marketplacev3-offers-09107391.browser.esm.js';
export { C as ContractInterceptor } from './contract-interceptor-6f8989ff.browser.esm.js';
export { C as ContractPlatformFee } from './contract-platform-fee-2c4fd32d.browser.esm.js';
export { A as Account, a as AccountFactory, b as AdminFlag, C as ContractPublishedMetadata, D as DEFAULT_PERMISSIONS, P as PermissionSnapshotSchema, d as SignerPermissionRequest, c as SignerPermissionRequestV1, S as SignerPermissionsSchema, e as extractEventsFromAbi } from './account-factory-f15458e0.browser.esm.js';
export { D as DeployTransaction, T as Transaction, b as biconomySendFunction, d as defaultGaslessSendFunction, a as defenderSendFunction, e as engineSendFunction, p as prepareGaslessRequest } from './transactions-e1717c1c.browser.esm.js';
export { e as extractConstructorParams, a as extractFunctions } from './contract-publisher-b459619e.browser.esm.js';
export { E as EndDateSchema, R as RawDateSchema, S as StartDateSchema, a as assertEnabled } from './assertEnabled-33c64682.browser.esm.js';
export { c as createTransactionBatches, d as deployContractDeterministic, a as deployWithThrowawayDeployer, e as estimateGasForDeploy, g as getDeploymentInfo } from './deployWithThrowawayDeployer-1d350b63.browser.esm.js';
export { a as InterfaceId_IERC1155, I as InterfaceId_IERC721 } from './QueryParams-151a4a33.browser.esm.js';
export { V as VoteType } from './Vote-3b66775c.browser.esm.js';
export { b as ERC1155WrappableSchema, E as ERC20WrappableSchema, a as ERC721WrappableSchema, d as PackMetadataInputSchema, c as PackRewardsOutputSchema, P as PackRewardsSchema } from './pack-5d9fe547.browser.esm.js';
import '@thirdweb-dev/storage';
import '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json';
import '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryRouter.json';
import 'ethers';
import 'eventemitter3';
import 'tiny-invariant';
import '@thirdweb-dev/chains';
import '@thirdweb-dev/generated-abis';
import '@thirdweb-dev/contracts-js/dist/abis/TWFactory.json';
import 'zod';
import 'bn.js';
import 'bs58';
import '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC20Permit.json';
import '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';
import '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';
import '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';
import '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';
import '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC721AQueryableUpgradeable.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';
import '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';
import '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';
import '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';
import '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';
import '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier_V1.json';
import '@thirdweb-dev/contracts-js/dist/abis/SharedMetadata.json';
import '@thirdweb-dev/contracts-js/dist/abis/zora_IERC721Drop.json';
import '@thirdweb-dev/contracts-js/dist/abis/ILoyaltyCard.json';
import '@thirdweb-dev/contracts-js/dist/abis/INFTMetadata.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';
import '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC1155Supply.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';
import '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/IERC2771Context.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';
import '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';
import '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';
import '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';
import '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';
import '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';
import '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';
import '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';
import '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';
import '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';
import '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';
import '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC20.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC721.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAirdropERC1155.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAccountFactoryCore.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAccountPermissions_V1.json';
import '@thirdweb-dev/contracts-js/dist/abis/IAccount.json';
import 'ethers/lib/utils';
import 'merkletreejs';
import 'uuid';
import 'fast-deep-equal';
import './marketplace-66b37d67.browser.esm.js';
import '@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json';

function getRpcUrl(network, clientId) {
  return `https://${network}.rpc.thirdweb.com/${clientId || ""}`;
}

// handle browser vs node global

// eslint-disable-next-line better-tree-shaking/no-top-level-side-effects
globalThis.global = globalThis;

export { getRpcUrl };
